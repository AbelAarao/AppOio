http://orbroker.sourceforge.net/
O Hibernate é um dos frameworks mais populares e vitoriosos em se tratando de Java. Se hoje temos uma especificação como a JPA, muito é devido ao grande sucesso do Hibernate, que popularizou o esquema ORM. Como tudo em programação, se você não faz as coisas bem feitas, vai ter problemas sim. Existe essa questão do "pesado" que vocÊ citou. Mas isso é pelo seguinte, muito se fala que consultas sem o uso de framework ORM, como o Hibernate, são mais rápidas, e são mesmo. Pense que quando vc usa um framework, ele é o responsavel por transformar tudo que vocÊ programou em instruções SQL e também a lidar com o JDBC. Por isso perde um pouco em performance em relação ao JDBC sem o uso de frameworks. Mas essa perda é muito pequena atualmente.Você precisa estuda-lo antes de usa-lo. Precisa entender como funcionam os mapeamentos, as consultas baseadas em HQL ou JPQL, como configurar pool de conexões e cache de segundo nível. Isto tudo você vai aprender lendo a documentação do Hibernate ou um bom livro ou mesmo participando de algum curso sobre o assunto.Dica, vá até a página oficial do Hibernate comece a ler o manual de usuario e tente desenvolver pequenos projetos de teste para aprender a trabalhar com ele. Se for procurar por livros, tente comprar livros atuais, porque as versões mais antigas do Hibernte tem algumas diferenças das atuais. Busque por livros de Hibernte 4 ou no minimo Hibernate 3.6 pra cima. Agora sobre os prós, com Hibernate você trabalha totalmente com orientação a objetos, o que não acontece se trabalhar com JDBC sem Hibernate. Você utiliza um mapeamento em classes que representam as entidades no banco de dados, e a partir deste mapeamento o Hibernate interage com o banco de dados. Assim, dentro do seu código, você não precisa mais se preocupar com colunas e tabelas, mas apenas com classes e atributos das classes. Seu código fica mais limpo, menos trabalhoso, facilita a manutenção e atualização.Você não vai precisar trabalhar com instruções de insert, update, delete o framework oferece métodos prontos para vc que fazem isso. Seus SQL para consultas são substituidos por consultas HQL ou JPQL, que são orientadas a objeto, ou mesmo a uma API chamada Criteria, em que você cria consultas não por string, mas usando métodos da API.


